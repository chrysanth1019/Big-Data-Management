sudo apt update && sudo apt upgrade -y

sudo apt install mc php8.3 php8.3-cli php8.3-fpm php8.3-mysql php8.3-xml php8.3-curl php8.3-mbstring php8.3-zip php8.3-bcmath php8.3-soap php8.3-intl unzip curl -y 

sudo apt install mariadb-server -y
sudo ufw allow 3306/tcp
sudo systemctl enable MariaDB
sudo apt install nginx -y
sudo ufw allow 'Nginx Full'

curl -sS https://getcomposer.org/installer -o composer-setup.php
HASH=$(curl -sS https://composer.github.io/installer.sig)
php -r "if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"

sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer


sudo nano /etc/nginx/sites-available/data-management
sudo ln -s /etc/nginx/sites-available/data-management /etc/nginx/sites-enabled/

sudo systemctl enable nginx
sudo systemctl enable php8.3-fpm

# Start Nginx
sudo systemctl start nginx

sudo chmod -R 777 /var/www/data_management

server {
    listen 80;
    server_name 162.43.5.53;

    root /var/www/data_management/public;
    index index.php index.html;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;  # adjust PHP version if needed
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }
}





FLUSH PRIVILEGES;
ALTER USER 'root'@'localhost' IDENTIFIED BY 'gT#7z@Km1!rQ2&Xn';


CREATE USER 'appuser'@'localhost' IDENTIFIED BY 'gT#7z@Km1!rQ2&Xn';
GRANT ALL PRIVILEGES ON data_management.* TO 'appuser'@'localhost';
FLUSH PRIVILEGES;


server {
    server_name 162.43.5.53 x162-43-5-53.static.xvps.ne.jp;

    root /var/www/data_management/public;
    index index.php index.html;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;  # adjust PHP version if needed
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/x162-43-5-53.static.xvps.ne.jp/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/x162-43-5-53.static.xvps.ne.jp/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = x162-43-5-53.static.xvps.ne.jp) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name 162.43.5.53 x162-43-5-53.static.xvps.ne.jp;
    return 404; # managed by Certbot


}

